---
name: Make New

on:
  workflow_dispatch:
    inputs:
      repo:
        description: GitHub repository name (new-repo)
        required: true
      title:
        description: Package title (New Package)
        required: true
      description:
        description: Short package description (Foos and bars.)
        required: true

jobs:
  repository:
    name: Create new repository
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Create repository
        run: |
          gh extension install mislav/gh-repo-collab
          gh repo create --internal --disable-wiki --description "$DESCRIPTION" $REPO
          gh repo edit $REPO --delete-branch-on-merge
          gh repo edit $REPO --enable-projects=false
          gh repo-collab add $REPO $CODEOWNER --permission admin
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          CODEOWNER: ${{ github.actor }}
          REPO: seamapi/${{ github.event.inputs.repo }}
          DESCRIPTION: ${{ github.event.inputs.description }}
  bootstrap:
    name: Bootstrap repository
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: repository
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_committer_name: ${{ secrets.GIT_USER_NAME }}
          git_committer_email: ${{ secrets.GIT_USER_EMAIL }}
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
      - name: Replace makenew boilerplate
        run: ./makenew.sh
        env:
          CI: "true"
          mk_codeowner: ${{ github.actor }}
          mk_repo: ${{ github.event.inputs.repo }}
          mk_slug: "@seamapi/${{ github.event.inputs.repo }}"
          mk_title: ${{ github.event.inputs.title }}
          mk_description: ${{ github.event.inputs.description }}
      - name: Set origin
        run: |
          git remote add origin $ORIGIN
          git config --add --bool push.autoSetupRemote true
        env:
          ORIGIN: https://github.com/seamapi/${{ github.event.inputs.repo }}.git
      - name: Commit
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          skip_fetch: true
          skip_checkout: true
          commit_message: Replace makenew boilerplate
          commit_user_name: ${{ secrets.GIT_USER_NAME }}
          commit_user_email: ${{ secrets.GIT_USER_EMAIL }}
          commit_author: ${{ secrets.GIT_USER_NAME }} <${{ secrets.GIT_USER_EMAIL }}>
  version:
    name: Cut initial version
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: bootstrap
    steps:
      - name: Cut version
        run: gh workflow run version.yml --repo $REPO --raw-field version=patch
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          REPO: seamapi/${{ github.event.inputs.repo }}
